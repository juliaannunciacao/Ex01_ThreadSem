import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
 
class Cruzamento {
    private String sentido = "Norte";
    private final Lock lock = new ReentrantLock();
    public void passarCarro(String novoSentido) {
        lock.lock();
        try {
            while (!sentido.equals(novoSentido)) {
                System.out.println(Thread.currentThread().getId() + " esperando para passar no sentido " + novoSentido);
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            System.out.println(Thread.currentThread().getId() + " passou no cruzamento no sentido " + sentido);
            sentido = sentido.equals("Norte") ? "Sul" : "Norte";
        } finally {
            lock.unlock();
        }
    }
}
 
class Carro extends Thread {
    private final Cruzamento cruzamento;
    private final String sentidoDesejado;
    public Carro(Cruzamento cruzamento, String sentidoDesejado) {
        this.cruzamento = cruzamento;
        this.sentidoDesejado = sentidoDesejado;
    }
    @Override
    public void run() {
        cruzamento.passarCarro(sentidoDesejado);
    }
}
